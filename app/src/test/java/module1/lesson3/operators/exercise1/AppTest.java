/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package module1.lesson3.operators.exercise1;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

import com.example.operators.editHere.OperatorLogic;

class AppTest {
    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    private final PrintStream originalOut = System.out;

    @BeforeEach
    public void setUpStreams() {
        System.setOut(new PrintStream(outContent));
    }

    @ParameterizedTest
    @CsvSource({
            "15, false, You are neither allowed to drive nor are you allowed to vote.",
            "16, true, You are allowed to vote.\nYou are not allowed to drive, but you are allowed to vote.",
            "17, false, You are neither allowed to drive nor are you allowed to vote.",
            "18, true, You are allowed to vote.\nYou are allowed to drive.",
            "19, false, You are allowed to drive.\nYou are not allowed to vote, but you are allowed to drive."
    })
    public void testPrintOutput(int age, boolean isCitizen, String expectedOutput) {
        OperatorLogic.printOutput(age, isCitizen);
        assertEquals(expectedOutput, outContent.toString().trim()); // Remove any potential extra whitespace
        outContent.reset(); // Clear the output stream for the next test
    }

    // Additional test for a case where none of the conditions are met (optional)
    @Test
    public void testNoneOfTheConditionsMet() {
        OperatorLogic.printOutput(25, true);
        assertEquals("You are allowed to vote.\nYou are allowed to drive.", outContent.toString().trim());
    }

    @AfterEach
    public void restoreStreams() {
        System.setOut(originalOut);
    }
}
